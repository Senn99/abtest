<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ss.abtest.mapper.CompanyMapper">
    <insert id="addLayer">
        insert into layer(company_id, name, token, flow_unit, traffic, test, create_time, update_time)
        values (#{companyId}, #{name}, #{token}, #{flowUnit}, 1000, 0, #{createTime}, #{updateTime})
    </insert>
    <insert id="addReflux">
        insert into layer(company_id, url, tqs, status, create_time, update_time)
        values (#{companyId}, #{url}, #{tqs}, 0, #{createTime}, #{updateTime})
    </insert>
    <insert id="addJoinApply">
        insert into company_join_apply(user_id, company_id, status, create_time, update_time)
        values (#{userId}, #{companyId}, 0, #{createTime}, #{updateTime})
    </insert>
    <insert id="addCreateApply">
        insert into company_create_apply(user_id, company_name, status, create_time, update_time)
        values (#{userId}, #{companyName}, 0, #{createTime}, #{updateTime})
    </insert>
    <insert id="addCompany" useGeneratedKeys="true" keyProperty="companyId" keyColumn="company_id">
        insert into company(name, status, create_time, update_time)
        values (#{companyName}, 0, #{createTime}, #{updateTime})
    </insert>
    <update id="addCompany2User">
        update user
        set company_id          = #{companyId},
            company_user_status = #{status}
        where user_id = #{userId}
    </update>
    <update id="editJoinApplyStatus">
        update company_join_apply
        set status      = #{status},
            update_time = #{updateTime}
        where join_apply_id = #{applyId}
    </update>
    <update id="updateReflux">
        update reflux
        set url    = #{url},
            tqs    = #{tqs},
            status = #{status}
        where reflux_id = #{refluxId}
    </update>
    <update id="editCreateApplyStatus">
        update company_create_apply
        set status      = #{status},
            update_time = #{updateTime}
        where create_apply_id = #{applyId}
    </update>
    <select id="listJoinApplyByCompanyId" resultType="com.ss.abtest.pojo.vo.JoinApplyTable">
        select ca.join_apply_id,
               user.name as userName,
               ca.user_id,
               ca.company_id,
               ca.status,
               ca.create_time,
               ca.update_time
        from company_join_apply as ca
                 left join user on ca.user_id = user.user_id
        where ca.company_id = #{companyId}
    </select>
    <select id="getJoinApplyById" resultType="com.ss.abtest.pojo.domain.CompanyJoinApply">
        select *
        from company_join_apply
        where join_apply_id = #{applyId}
    </select>
    <select id="getReflux" resultType="com.ss.abtest.pojo.domain.Reflux">
        select *
        from reflux
        where company_id = #{companyId}
    </select>
    <select id="listAllCompany" resultType="com.ss.abtest.pojo.vo.CompanyTable">
        select c.*, u.name as creatorName
        from company as c
                 left join user as u on c.company_id = u.company_id and u.company_user_status = 0
    </select>
    <select id="getJoinApplyByUserId" resultType="com.ss.abtest.pojo.domain.CompanyJoinApply">
        select *
        from company_join_apply
        where user_id = #{userId}
          and status in (0, 1)
    </select>
    <select id="getCreateApplyByUserId" resultType="int">
        select count(1)
        from company_create_apply
        where user_id = #{userId}
          and status in (0, 1)
    </select>
    <select id="listCreateApply" resultType="com.ss.abtest.pojo.vo.CreateApplyTable">
        select ca.create_apply_id,
               user.name as userName,
               ca.company_name,
               ca.user_id,
               ca.status,
               ca.create_time,
               ca.update_time
        from company_create_apply as ca
                 left join user on ca.user_id = user.user_id
    </select>
    <select id="getCreateApplyById" resultType="com.ss.abtest.pojo.domain.CompanyCreateApply">
        select *
        from company_create_apply
        where create_apply_id = #{applyId}
    </select>
</mapper>
